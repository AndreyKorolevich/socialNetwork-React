{"version":3,"sources":["serviceWorker.js","components/Navbar/NavbarFriends/NavbarFriends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","App.js","redux/sidebar-reducer.js","redux/redux-store.js","index.js","redux/auth-reducer.js","components/Common/Preloader/Preloader.jsx","components/Header/Header.module.css","redux/profile-reducer.js","components/Dialogs/Avatars/Avatar.jsx","components/Navbar/Navbar.module.css","redux/newDialogs-reducer.js","components/Utilits/converter.js","redux/users-reducer.js","components/Navbar/NavbarFriends/NavbarFirends.module.css","components/Dialogs/Avatars/Avatar.module.css","components/Common/Preloader/Preloader.module.css","api/api.js"],"names":["Boolean","window","location","hostname","match","NavbarFriends","props","className","classes","name","Avatar","img","Navbar","friendsElement","friends","slice","map","friend","id","nav","item","to","activeClassName","active","friendsName","NavbarContainer","connect","state","sidebar","dispatch","Header","header","src","login","isAuth","onClick","logout","HeaderAPI","render","React","Component","HeaderContainer","authUser","initialState","initialize","AppReducer","action","type","DialogsContainer","lazy","FriendsContainer","ProfileContainer","UsersContainer","News","Music","Settings","Login","App","this","initialized","Suspense","fallback","Preloader","path","compose","withRouter","app","a","promise","Promise","all","sideBarReducer","newState","reducers","combineReducers","profilePage","profileReducer","dialogsPage","newDialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","email","setUserData","data","AuthorAxios","autMe","resultCode","password","rememberMe","stopSubmit","_error","messages","lds","module","exports","ADD_POST","posts","message","likeCount","profile","status","setUserStatus","addNewPostActionCreator","newPost","getUserProfile","ProfileAxios","getProfile","response","getUserStatus","getStatus","updateUserStatus","updateStatus","filter","post","postId","dialogs","avatars","addNewMessage","newMessage","converter","items","objPropName","newObjProps","user","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","setUsers","unfollowSuccess","setTotalCount","totalCount","changeIsFetching","disableButton","getUser","UserAxios","getUsers","getPage","numberPage","followUnfollow","api","unfollow","bind","follow","followed","instance","axios","withCredentials","baseURL","headers","get","delete","put","photo"],"mappings":"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","file":"static/js/main.abfb5506.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classes from './NavbarFirends.module.css';\r\nimport Avatar from \"../../Dialogs/Avatars/Avatar\";\r\n\r\n\r\nconst NavbarFriends = (props) => {\r\n\r\n    return (\r\n        <div className={classes.name}>\r\n            <Avatar img={props.img}/>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavbarFriends;"," import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n import NavbarFriends from \"./NavbarFriends/NavbarFriends\";\r\n\r\nconst Navbar = ({friends}) => {\r\n\r\n    let bestFriends = friends.slice(0,3)\r\n    let friendsElement = bestFriends\r\n        .map(friend => <NavbarFriends name={friend.name} id={friend.id} img={friend.img}/>);\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/friends' activeClassName={classes.active}>Friends</NavLink>\r\n                <div className={classes.friendsName}>\r\n                {friendsElement}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\nexport default NavbarContainer;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://media.istockphoto.com/illustrations/cartoon-spaceman-looks-a-cute-illustration-id516985444'></img>\r\n            <div className={classes.login}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderAPI extends React.Component {\r\n\r\n    render = () => {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authUser.isAuth,\r\n        login: state.authUser.login\r\n    }\r\n}\r\n\r\n\r\nconst HeaderContainer = connect(mapStateToProps, {logout})(HeaderAPI)\r\nexport default HeaderContainer;","import {authUser} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS ';\r\n\r\n\r\nlet initialState = {\r\n    initialize: false,\r\n};\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialize: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initialized = () => {\r\n    return async (dispatch) => {\r\n        let promise = dispatch(authUser());\r\n        await Promise.all([promise]);\r\n        dispatch(initializedSuccess());\r\n    }\r\n}\r\n\r\nexport default AppReducer","import React from 'react';\nimport './App.css';\nimport {Route, withRouter} from \"react-router-dom\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialized} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst FriendsContainer = React.lazy(() => import('./components/Friends/FriendsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst Login = React.lazy(() => import('./components/Login/Login'));\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initialized();\n    }\n\n    render() {\n        if (!this.props.initialize) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    <React.Suspense fallback={<Preloader/>}>\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                            <Route path='/friends' render={() => <FriendsContainer/>}/>\n                            <Route path='/users' render={() => <UsersContainer/>}/>\n                            <Route path='/news' render={() => <News/>}/>\n                            <Route path='/music' render={() => <Music/>}/>\n                            <Route path='/settings' render={() => <Settings/>}/>\n                            <Route path='/login' render={() => <Login/>}/>\n                    </React.Suspense>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        initialize: state.app.initialize\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initialized})\n)(App);\n","let initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Andrew',\r\n            img: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Kristina',\r\n            img: 'https://pm1.narvii.com/6960/b96261428e66115921eb208de561af56232f451br1-400-400v2_uhq.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Stas',\r\n            img: 'https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Sasha',\r\n            img: 'https://avatars.mds.yandex.net/get-pdb/2497678/8a0d8782-6444-499a-b7c2-da531ff44941/s600'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Katja',\r\n            img: 'https://lh3.googleusercontent.com/proxy/WXHSEScu6kZ8jdFP3HJuwQ2ogjsIi04FNCSkXbva1zykTRIprR0CTqI4v8ikkCmxN66Ok4ilb7gZhC0T2nQQKfqhhQDC3JhMu37v1GXElrVYrA0jkjtWaJ8VQTljt7Q8Rec3j1SOSVFk5jpiEMx-HZSW9j7ooqTIGvfl8vwdV-4'\r\n        }\r\n    ]\r\n}\r\nconst sideBarReducer = (state = initialState, action) => {\r\n    let newState = {...state}\r\n    return newState\r\n}\r\n\r\nexport default sideBarReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport newDialogsReducer from \"./newDialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sideBarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport AppReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: newDialogsReducer,\r\n    usersPage: usersReducer,\r\n    sidebar: sideBarReducer,\r\n    authUser: authReducer,\r\n    app: AppReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)) );\r\nexport default store;\r\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import {AuthorAxios} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}});\r\n\r\nexport const authUser = () => {\r\n    return (dispatch) => {\r\n       return AuthorAxios.autMe().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data;\r\n                dispatch(setUserData(id, email, login, true));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        AuthorAxios.login(email, password, rememberMe).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(authUser());\r\n            }else {\r\n                dispatch(stopSubmit('login', {_error: data.messages}));\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        AuthorAxios.logout().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false));\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default authReducer","import React from 'react';\r\nimport classes from \"./Preloader.module.css\";\r\n\r\nlet Preloader= () => {\r\n    return (\r\n        <div className={classes.lds}></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Lu4_\",\"login\":\"Header_login__1xCbv\"};","import {ProfileAxios} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD_POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hi how are you?', likeCount: '15'},\r\n        {id: 2, message: \"It is me  first post\", likeCount: '20'},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 3, message: action.newPost, likeCount: '0'}],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const addNewPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (id) => {\r\n    return async (dispatch) => {\r\n        const response = await ProfileAxios.getProfile(id);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (id) => {\r\n    return async (dispatch) => {\r\n        const response = await ProfileAxios.getStatus(id);\r\n        dispatch(setUserStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        const response = await ProfileAxios.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport classes from './Avatar.module.css'\r\n\r\n\r\nconst Avatar = ({img}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={img}></img>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Avatar;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__24QFt\",\"item\":\"Navbar_item__T7coa\",\"active\":\"Navbar_active__ua9__\",\"friendsName\":\"Navbar_friendsName__1jYyu\"};","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'How are you doing?'},\r\n        {id: 3, message: 'Hi'},\r\n        {id: 4, message: 'Bye'},\r\n        {id: 5, message: 'It is ok'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Andrew'},\r\n        {id: 2, name: 'Kristina'},\r\n        {id: 3, name: 'Stas'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Katja'}\r\n    ],\r\n    avatars: [\r\n        {id: 1, img: 'https://i.pinimg.com/originals/0c/a9/e2/0ca9e28dcb12dc698cfd2beda6d6fa64.jpg'},\r\n        {\r\n            id: 2,\r\n            img: 'https://pm1.narvii.com/6960/b96261428e66115921eb208de561af56232f451br1-400-400v2_uhq.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            img: 'https://pristor.ru/wp-content/uploads/2019/09/%D0%A4%D0%BE%D1%82%D0%BE-%D0%B4%D0%BB%D1%8F-%D0%B0%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D0%B8-%D0%B4%D0%BB%D1%8F-%D0%BF%D0%B0%D1%80%D0%BD%D0%B5%D0%B9-%D0%B2-%D0%92%D0%9A011.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            img: 'https://avatars.mds.yandex.net/get-pdb/2497678/8a0d8782-6444-499a-b7c2-da531ff44941/s600'\r\n        },\r\n        {\r\n            id: 5,\r\n            img: 'https://cdn.freelance.ru/img/portfolio/pics/00/37/9B/3644384.jpg?mt=57607de1'\r\n        }\r\n    ]\r\n}\r\n\r\nconst newDialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: action.newMessage,}],\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNewMessage = (newMessage) => ({type: ADD_MESSAGE, newMessage})\r\n\r\n\r\nexport default newDialogsReducer","export const converter = (items, id, objPropName, newObjProps) => {\r\n    return items.map (user => {\r\n        if(user[objPropName] === id) {\r\n            return{...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n}","import {UserAxios} from \"../api/api\";\r\nimport {converter} from \"../components/Utilits/converter\";\r\n\r\nconst FOLLOW = 'user/FOLLOW';\r\nconst UNFOLLOW = 'user/UNFOLLOW';\r\nconst SET_USERS = 'user/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'user/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'user/SET_TOTAL_COUNT';\r\nconst CHANGE_IS_FETCHING = 'user/CHANGE_IS_FETCHING';\r\nconst DISABLE_BUTTON = 'user/DISABLE_BUTTON';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: converter(state.users, action.id, 'id', {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: converter(state.users, action.id, 'id', {followed: true})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n        case CHANGE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case DISABLE_BUTTON: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : state.followingInProgress.filter(id => id !== action.id)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (id) => ({type: FOLLOW, id});\r\n\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\n\r\nexport const unfollowSuccess = (id) => ({type: UNFOLLOW, id});\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\n\r\nexport const setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\n\r\nexport const changeIsFetching = (isFetching) => ({type: CHANGE_IS_FETCHING, isFetching});\r\n\r\nexport const disableButton = (isFetching, id) => ({type: DISABLE_BUTTON, isFetching, id});\r\n\r\n\r\nexport const getUser = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(changeIsFetching(true));\r\n        const data = await UserAxios.getUsers(currentPage, pageSize);\r\n        dispatch(changeIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalCount(data.totalCount));\r\n    }\r\n}\r\nexport const getPage = (numberPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(changeIsFetching(true));\r\n        dispatch(setCurrentPage(numberPage));\r\n        const data = await UserAxios.getUsers(numberPage, pageSize)\r\n        dispatch(changeIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n    }\r\n}\r\n\r\nexport const followUnfollow = async (id, dispatch, api, action) => {\r\n    dispatch(disableButton(true, id));\r\n    const data = await api(id)\r\n    if (data.resultCode === 0) {\r\n        dispatch(action(id));\r\n    }\r\n    dispatch(disableButton(false, id));\r\n}\r\n\r\nexport const unfollow = (id) => {\r\n    return (dispatch) => {\r\n        followUnfollow(id, dispatch, UserAxios.unfollow.bind(UserAxios), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return (dispatch) => {\r\n        followUnfollow(id, dispatch, UserAxios.follow.bind(UserAxios), followSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"NavbarFirends_name__336hg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Avatar_item__1cUZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds\":\"Preloader_lds__3yXX9\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '9db4e204-2315-467d-bda4-460db7f8a440'\r\n    }\r\n});\r\n\r\nexport class UserAxios {\r\n    static getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n    static unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n    static follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport class ProfileAxios {\r\n    static getProfile(id) {\r\n        return instance.get(`profile/${id}`);\r\n    }\r\n\r\n    static getStatus(id) {\r\n        return instance.get(`profile/status/${id}`);\r\n    }\r\n\r\n    static updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    }\r\n\r\n    static setPhoto(photo) {\r\n        return instance.put(`profile/photo`, {photo});\r\n    }\r\n    static setProfile(profile) {\r\n        return instance.put(`profile/`, {profile});\r\n    }\r\n}\r\n\r\nexport class AuthorAxios {\r\n    static autMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    }\r\n\r\n    static login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n            .then(response => response.data)\r\n    }\r\n\r\n    static logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}