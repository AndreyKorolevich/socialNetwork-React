{"version":3,"sources":["components/Common/ComponentForm/FormControl.jsx","components/Forms/Validations/Validation.js","components/Common/ComponentForm/FormControl.module.css","components/Dialogs/Dialogs.module.css","../node_modules/react-router-dom/es/warnAboutDeprecatedESMImport.js","../node_modules/react-router-dom/es/Redirect.js","HOC/withAuthRedirect.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItems/DialogItem.jsx","components/Forms/MessageForm.jsx","components/Dialogs/Dialogs.jsx","redux/Selectors/Dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","touched","error","warning","props","className","classes","React","createElement","element","required","value","maxLength","maxSimbol","length","module","exports","Redirect","mapStateToProps","state","isAuth","authUser","withAuthRedirect","Component","RedirectComponent","this","to","connect","Message","message","DialogItem","id","name","dialog","activeClassName","active","maxLength30","reduxForm","form","handleSubmit","onSubmit","textarea","Field","placeholder","component","validate","button","type","Dialogs","dialogsPage","addNewMessage","dialogsElement","dialogs","map","key","messageElement","messages","avatarElement","avatars","avatar","Avatar","img","dialogsItems","formData","getDialogsPage","compose"],"mappings":"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","file":"static/js/5.61d6d349.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './FormControl.module.css';\r\n\r\n\r\nexport const FormControl  = ({\r\n                             input,\r\n                             meta: {touched, error, warning},\r\n                             ...props\r\n                         }) => {\r\n\r\n    return (\r\n        <div className={classes.error}>\r\n            {React.createElement(props.element, {...input, ...props})}\r\n            {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n                (warning && <span>{warning}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLength = (maxSimbol) => (value) => {\r\n    if (value.length > maxSimbol) return `Max length is ${maxSimbol} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__3thCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ckfq\",\"dialogsItems\":\"Dialogs_dialogsItems__2rgKA\",\"dialog\":\"Dialogs_dialog__2WzTE\",\"active\":\"Dialogs_active__2W3di\",\"messages\":\"Dialogs_messages__2IBnS\",\"message\":\"Dialogs_message__12OyC\",\"textarea\":\"Dialogs_textarea__1bBDt\"};","/* eslint-disable prefer-arrow-callback, no-empty */\nvar printWarning = function printWarning() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  printWarning = function printWarning(format, subs) {\n    var index = 0;\n    var message = \"Warning: \" + (subs.length > 0 ? format.replace(/%s/g, function () {\n      return subs[index++];\n    }) : format);\n\n    if (typeof console !== \"undefined\") {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React Router ---\n      // This error was thrown as a convenience so that you can use the\n      // stack trace to find the callsite that triggered this warning.\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\nexport default function (member) {\n  printWarning('Please use `import { %s } from \"react-router-dom\"` instead of `import %s from \"react-router-dom/es/%s\"`. ' + \"Support for the latter will be removed in the next major release.\", [member, member]);\n}","import warnAboutDeprecatedESMImport from \"./warnAboutDeprecatedESMImport.js\";\nwarnAboutDeprecatedESMImport(\"Redirect\");\nimport { Redirect } from \"../esm/react-router-dom.js\";\nexport default Redirect;","import Redirect from \"react-router-dom/es/Redirect\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authUser.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n return connect(mapStateToProps)(RedirectComponent);\r\n}","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={classes.message}>{message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = ({id,name}) => {\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={'/dialogs/' + id} activeClassName={classes.active}>{name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from './PostForm.module.css';\r\nimport {FormControl } from \"../Common/ComponentForm/FormControl\";\r\nimport {maxLength, required} from \"./Validations/Validation\";\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <div className={classes.textarea}>\r\n                    <Field placeholder='Message text' element='textarea' name='message' component={FormControl }\r\n                           validate={[required, maxLength30]}/>\r\n                </div>\r\n                <div className={classes.button}>\r\n                    <button type='submit'>Send</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'message'})(MessageForm)\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport Avatar from \"./Avatars/Avatar\";\r\nimport MessageForm from \"../Forms/MessageForm\";\r\n\r\nconst Dialogs = ({dialogsPage,addNewMessage}) => {\r\n\r\n    let dialogsElement = dialogsPage.dialogs\r\n        .map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messageElement = dialogsPage.messages\r\n        .map(message => <Message message={message.message} key={message.id}/>);\r\n    let avatarElement = dialogsPage.avatars\r\n        .map(avatar => <Avatar img={avatar.img}  key={avatar.id}/>);\r\n\r\n    const onSubmit = (formData) => {\r\n        addNewMessage(formData.message);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n\r\n            <span className={classes.avatars}> {avatarElement} </span>\r\n\r\n            <div className={classes.messages}>\r\n                {messageElement}\r\n            </div>\r\n            <div className={classes.textarea}>\r\n                <MessageForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewMessage} from \"../../redux/newDialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsPage} from \"../../redux/Selectors/Dialogs-selectors\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}