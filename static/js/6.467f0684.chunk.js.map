{"version":3,"sources":["components/Common/ComponentForm/FormControl.jsx","components/Forms/Validations/Validation.js","components/Common/ComponentForm/FormControl.module.css","components/Forms/LoginForm.module.css","components/Login/Login.module.css","components/Forms/LoginForm.jsx","components/Login/Login.jsx"],"names":["FormControl","input","meta","touched","error","warning","props","className","classes","React","createElement","element","required","value","maxLength","maxSimbol","length","module","exports","maxLength25","reduxForm","form","handleSubmit","captchaUrl","onSubmit","Field","placeholder","name","component","validate","type","checkbox","src","alt","connect","state","isAuth","authUser","login","to","formData","email","password","rememberMe","captcha"],"mappings":"0LAIaA,EAAe,SAAC,GAIG,IAHHC,EAGE,EAHFA,MAGE,IAFFC,KAAOC,EAEL,EAFKA,QAASC,EAEd,EAFcA,MAAOC,EAErB,EAFqBA,QACpBC,EACD,gCAE3B,OACI,yBAAKC,UAAWC,IAAQJ,OACnBK,IAAMC,cAAcJ,EAAMK,QAA1B,2BAAuCV,GAAUK,IACjDH,IACCC,GAAS,8BAAOA,IACbC,GAAW,8BAAOA,O,iCCfnC,6EAEaO,EAAW,SAAAC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAY,SAACC,GAAD,OAAe,SAACF,GACrC,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCPlCE,EAAOC,QAAU,CAAC,MAAQ,6B,oBCA1BD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,2B,oBCAjED,EAAOC,QAAU,CAAC,MAAQ,uB,oICKpBC,EAAcL,YAAU,IAkCfM,cAAU,CAACC,KAAM,SAAjBD,EAhCG,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAclB,EAAuB,EAAvBA,MAAOmB,EAAgB,EAAhBA,WAErC,OACI,0BAAMC,SAAUF,GACZ,6BACI,kBAACG,EAAA,EAAD,CAAOC,YAAY,QAAQC,KAAK,QAAQhB,QAAQ,QACzCiB,UAAW5B,IAAa6B,SAAU,CAACjB,IAAUO,MAExD,6BACI,kBAACM,EAAA,EAAD,CAAOC,YAAY,WAAWC,KAAK,WAAWG,KAAM,WAAYnB,QAAQ,QACjEiB,UAAW5B,IAAa6B,SAAU,CAACjB,IAAUO,MAExD,yBAAKZ,UAAWC,IAAQJ,OACvBA,GAAS,6BAAMA,IAEhB,yBAAKG,UAAWC,IAAQuB,UACpB,kBAACN,EAAA,EAAD,CAAOK,KAAK,WAAWH,KAAK,aAAahB,QAAQ,QAC1CiB,UAAW5B,MAFtB,gBAIA,6BACI,yBAAKgC,IAAKT,EAAYU,IAAI,KACzBV,GAAc,kBAACE,EAAA,EAAD,CAAOC,YAAY,UAAUC,KAAK,UAAUhB,QAAQ,QAC7CiB,UAAW5B,IAAa6B,SAAU,CAACjB,QAE7D,6BACI,4BAAQkB,KAAK,UAAb,c,uBCADI,uBAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,SAASD,OACvBb,WAAYY,EAAME,SAASd,cAII,CAACe,WAAzBJ,EA1BD,SAAC,GAAiC,IAAhCE,EAA+B,EAA/BA,OAAQE,EAAuB,EAAvBA,MAAOf,EAAgB,EAAhBA,WAK3B,OAAGa,EACO,kBAAC,IAAD,CAAUG,GAAI,aAIpB,6BACI,wBAAIhC,UAAWC,IAAQ8B,OAAvB,SAGA,kBAAC,EAAD,CAAWd,SAbF,SAACgB,GACdF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAYpCrB,WAAYA","file":"static/js/6.467f0684.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './FormControl.module.css';\r\n\r\n\r\nexport const FormControl  = ({\r\n                             input,\r\n                             meta: {touched, error, warning},\r\n                             ...props\r\n                         }) => {\r\n\r\n    return (\r\n        <div className={classes.error}>\r\n            {React.createElement(props.element, {...input, ...props})}\r\n            {touched &&\r\n            ((error && <span>{error}</span>) ||\r\n                (warning && <span>{warning}</span>))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLength = (maxSimbol) => (value) => {\r\n    if (value.length > maxSimbol) return `Max length is ${maxSimbol} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__3thCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"LoginForm_checkbox__2Bi_b\",\"error\":\"LoginForm_error__c3s36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__m9X_Y\"};","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../Common/ComponentForm/FormControl\";\r\nimport {maxLength, required} from \"./Validations/Validation\";\r\nimport classes from './LoginForm.module.css';\r\n\r\nconst maxLength25 = maxLength(25);\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder='email' name='email' element='input'\r\n                       component={FormControl} validate={[required, maxLength25]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder='password' name='password' type={'password'} element='input'\r\n                       component={FormControl} validate={[required, maxLength25]}/>\r\n            </div>\r\n            <div className={classes.error}>\r\n            {error && <div>{error}</div>}\r\n            </div>\r\n            <div className={classes.checkbox}>\r\n                <Field type='checkbox' name='rememberMe' element='input'\r\n                       component={FormControl}/> remember Me\r\n            </div>\r\n            <div>\r\n                <img src={captchaUrl} alt=\"\"/>\r\n                {captchaUrl && <Field placeholder='captcha' name='captcha' element='input'\r\n                                      component={FormControl} validate={[required]}/>}\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm)","import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport LoginForm from \"../Forms/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = ({isAuth, login, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(isAuth) {\r\n       return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={classes.login}>\r\n                Login\r\n            </h1>\r\n            <LoginForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authUser.isAuth,\r\n        captchaUrl: state.authUser.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{login})(Login);"],"sourceRoot":""}