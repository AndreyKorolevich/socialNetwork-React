{"version":3,"sources":["components/Forms/PostForm.module.css","../node_modules/react-router-dom/es/warnAboutDeprecatedESMImport.js","../node_modules/react-router-dom/es/Redirect.js","HOC/withAuthRedirect.jsx","components/Dialogs/Message/Message.jsx","components/Forms/MessageForm.jsx","components/Dialogs/Dialogs.jsx","redux/Selectors/Dialogs-selectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Redirect","mapStateToProps","state","isAuth","authUser","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","message","className","classes","maxLength30","maxLength","reduxForm","form","handleSubmit","onSubmit","textarea","Field","placeholder","element","name","component","FormControl","validate","required","button","type","Dialogs","dialogsPage","addNewMessage","dialogsElement","dialogs","map","dialog","DialogItem","img","key","id","messageElement","messages","friends","index","users","dialogsItems","userAvatar","src","alt","formData","getDialogsPage","compose"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,SAAW,6B,qECsBpD,ICpBAC,E,MAAQ,E,0DCCvB,IAAMC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,SAASD,SAIlBE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAACT,EAAD,CAAUU,GAAG,eAHR,GACXC,IAAML,WAMzC,OAAOM,YAAQX,EAARW,CAAyBL,K,6ECPlBM,EAPC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,yBAAKC,UAAWC,IAAQF,SAAUA,I,4DCCpCG,EAAcC,YAAU,IAgBfC,cAAU,CAACC,KAAM,WAAjBD,EAdK,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aAClB,OACI,0BAAMC,SAAUD,GACR,yBAAKN,UAAWC,IAAQO,UACpB,kBAACC,EAAA,EAAD,CAAOC,YAAY,eAAeC,QAAQ,WAAWC,KAAK,UAAUC,UAAWC,IACxEC,SAAU,CAACC,IAAUd,MAEhC,yBAAKF,UAAWC,IAAQgB,QACpB,4BAAQC,KAAK,UAAb,aC2BLC,EArCC,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cAEvBC,EAAiBF,EAAYG,QAC5BC,KAAI,SAAAC,GAAM,OAAI,kBAACC,EAAA,EAAD,CAAYC,IAAKF,EAAOE,IAAKf,KAAMa,EAAOb,KAAMgB,IAAKH,EAAOI,GAAIA,GAAIJ,EAAOI,QAC1FC,EAAiBV,EAAYW,SAASC,QACrCR,KAAI,SAACzB,EAASkC,GAAV,OAAoB,kBAAC,EAAD,CAASlC,QAASA,EAAQA,QAAS6B,IAAKK,OAMrE,OACI,yBAAKjC,UAAWC,IAAQsB,SACpB,wBAAIvB,UAAWC,IAAQW,MAAvB,gBACA,yBAAKZ,UAAWC,IAAQiC,OACpB,yBAAKlC,UAAWC,IAAQkC,cACnBb,IAGT,yBAAKtB,UAAWC,IAAQwB,QACpB,yBAAKzB,UAAWC,IAAQmC,YACpB,yBAAKC,IAAKjB,EAAYG,QAAQ,GAAGI,IAAKW,IAAI,KAC1C,8BAAOlB,EAAYG,QAAQ,GAAGX,OAElC,yBAAKZ,UAAWC,IAAQ8B,UACnBD,GAEL,yBAAK9B,UAAWC,IAAQO,UACpB,kBAAC,EAAD,CAAaD,SArBZ,SAACgC,GACdlB,EAAckB,EAASxC,gB,iCCdlByC,EAAiB,SAACrD,GAC3B,OAAOA,EAAMiC,aCcFqB,sBACX5C,aAPoB,SAACV,GACrB,MAAO,CACHiC,YAAaoB,EAAerD,MAKP,CAACkC,oBAC1B/B,IAFWmD,CAEOtB","file":"static/js/5.085eedc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postForm\":\"PostForm_postForm__39sdv\",\"textarea\":\"PostForm_textarea__39Ned\"};","/* eslint-disable prefer-arrow-callback, no-empty */\nvar printWarning = function printWarning() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  printWarning = function printWarning(format, subs) {\n    var index = 0;\n    var message = \"Warning: \" + (subs.length > 0 ? format.replace(/%s/g, function () {\n      return subs[index++];\n    }) : format);\n\n    if (typeof console !== \"undefined\") {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React Router ---\n      // This error was thrown as a convenience so that you can use the\n      // stack trace to find the callsite that triggered this warning.\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\nexport default function (member) {\n  printWarning('Please use `import { %s } from \"react-router-dom\"` instead of `import %s from \"react-router-dom/es/%s\"`. ' + \"Support for the latter will be removed in the next major release.\", [member, member]);\n}","import warnAboutDeprecatedESMImport from \"./warnAboutDeprecatedESMImport.js\";\nwarnAboutDeprecatedESMImport(\"Redirect\");\nimport { Redirect } from \"../esm/react-router-dom.js\";\nexport default Redirect;","import Redirect from \"react-router-dom/es/Redirect\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authUser.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n return connect(mapStateToProps)(RedirectComponent);\r\n}","import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={classes.message}>{message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from './PostForm.module.css';\r\nimport {FormControl } from \"../Common/ComponentForm/FormControl\";\r\nimport {maxLength, required} from \"./Validations/Validation\";\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst MessageForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <div className={classes.textarea}>\r\n                    <Field placeholder='Message text' element='textarea' name='message' component={FormControl }\r\n                           validate={[required, maxLength30]}/>\r\n                </div>\r\n                <div className={classes.button}>\r\n                    <button type='submit'>Send</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'message'})(MessageForm)\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItems/DialogItem\";\r\nimport MessageForm from \"../Forms/MessageForm\";\r\n\r\nconst Dialogs = ({dialogsPage, addNewMessage}) => {\r\n\r\n    let dialogsElement = dialogsPage.dialogs\r\n        .map(dialog => <DialogItem img={dialog.img} name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messageElement = dialogsPage.messages.friends\r\n        .map((message, index) => <Message message={message.message} key={index}/>);\r\n\r\n    const onSubmit = (formData) => {\r\n        addNewMessage(formData.message);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <h6 className={classes.name}>All Messages</h6>\r\n            <div className={classes.users}>\r\n                <div className={classes.dialogsItems}>\r\n                    {dialogsElement}\r\n                </div>\r\n            </div>\r\n            <div className={classes.dialog}>\r\n                <div className={classes.userAvatar}>\r\n                    <img src={dialogsPage.dialogs[1].img} alt=\"\"/>\r\n                    <span>{dialogsPage.dialogs[1].name}</span>\r\n                </div>\r\n                <div className={classes.messages}>\r\n                    {messageElement}\r\n                </div>\r\n                <div className={classes.textarea}>\r\n                    <MessageForm onSubmit={onSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","export const getDialogsPage = (state) => {\r\n    return state.dialogsPage\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewMessage} from \"../../redux/newDialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsPage} from \"../../redux/Selectors/Dialogs-selectors\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addNewMessage}),\r\n    withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}